.. note::

    Hallo und herzlich willkommen in der SunFounder Raspberry Pi & Arduino & ESP32 Enthusiasten-Community auf Facebook! Tauche gemeinsam mit anderen Enthusiasten tiefer in die Welt von Raspberry Pi, Arduino und ESP32 ein.

    **Warum beitreten?**

    - **Expertenunterst√ºtzung**: L√∂se nach dem Kauf auftretende Probleme und technische Herausforderungen mit Hilfe unserer Community und unseres Teams.
    - **Lernen & Teilen**: Tausche Tipps und Anleitungen aus, um deine F√§higkeiten zu erweitern.
    - **Exklusive Vorschauen**: Erhalte fr√ºhzeitigen Zugang zu neuen Produktank√ºndigungen und exklusiven Einblicken.
    - **Spezielle Rabatte**: Profitiere von exklusiven Rabatten auf unsere neuesten Produkte.
    - **Festliche Aktionen und Verlosungen**: Nimm an Verlosungen und Feiertagsaktionen teil.

    üëâ Bereit, gemeinsam mit uns zu entdecken und zu erschaffen? Klicke auf [|link_sf_facebook|] und tritt noch heute bei!

1.5 Entdecke die Arduino-Welt (IDE)
================================================

Einf√ºhrung in die Arduino IDE
-------------------------------------

Willkommen in der Arduino IDE, deinem speziellen Werkzeug, um coole Elektronikprojekte zu erstellen. In diesem Programm schreibst du die Anweisungen, auch Code genannt, die deinem Arduino sagen, was er tun soll.

.. image:: img/1_ide_introduce.png
    :align: center
    :width: 800

Hier sind einige der Funktionen, die du mit der Arduino IDE nutzen kannst:


* **√úberpr√ºfen / Hochladen**: Diese Funktionen pr√ºfen deinen Code und senden ihn an die Arduino-Platine.
* **Platine & Port ausw√§hlen**: Hilft deinem Computer, deine Arduino-Platine zu finden. Es zeigt, wo deine Platine angeschlossen ist, damit der Code am richtigen Ort landet.
* **Sketchbook**: Ein Ort, um alle deine bisherigen Codes und Projekte zu finden.
* **Board-Manager**: F√ºgt neue Arduino-Platinen hinzu, die du programmieren kannst.
* **Bibliotheks-Manager**: Bietet zus√§tzlichen Code f√ºr weitere Funktionen in deinen Projekten.
* **Debugger:** Hilft, Probleme im Code zu beheben.
* **Suche**: Erm√∂glicht das schnelle Auffinden bestimmter Codeabschnitte.
* **Serieller Monitor**: √ñffnet den seriellen Monitor zur Kommunikation mit der Arduino-Platine.
* **Serieller Plotter**: Erstellt Diagramme aus Daten, wie Lichtst√§rken.

F√ºr detailliertere Informationen √ºber diese Funktionen, besuche bitte |link_docs_ide|.

Grundlegende Einstellungen
-------------------------------

Als N√§chstes werfen wir einen Blick auf die Grundeinstellungen der Arduino IDE. Klicke in der Men√ºleiste oben auf **Datei** und dann auf **Voreinstellungen**.

.. image:: img/1_ide_preferences.png
    :align: center

.. raw:: html

    <br>

Zun√§chst siehst du den Standard-Speicherort f√ºr deine Projekte, die als Sketche bezeichnet werden. Diese Sketche werden in einem Bereich namens Sketchbook gespeichert. Du kannst den Standard-Speicherort beibehalten oder einen Ort ausw√§hlen, der f√ºr dich am besten passt.

.. image:: img/1_ide_setting.png
    :align: center

.. raw:: html

    <br>

Anschlie√üend kannst du die Arduino IDE nach deinen W√ºnschen anpassen:

* Stelle die **Schriftgr√∂√üe**, die **Skalierung der Oberfl√§che**, **Themen** und sogar die **Sprache** ein, in der die IDE angezeigt wird.
* Unter **Ausf√ºhrliche Ausgabe anzeigen bei** kannst du bei **kompilieren** oder **hochladen** ein H√§kchen setzen, um detaillierte R√ºckmeldungen zu Fehlern w√§hrend dieser Vorg√§nge zu erhalten.

Passe die Arduino IDE so an, dass sie f√ºr dich so komfortabel wie m√∂glich ist. Wenn du mit deinen Einstellungen zufrieden bist, klicke auf **OK**, um sie zu speichern.

Herzlichen Gl√ºckwunsch! Du hast die Arduino IDE erfolgreich installiert und konfiguriert. Du hast einen wichtigen ersten Schritt in die Welt des Arduino-Programmierens gemacht.
