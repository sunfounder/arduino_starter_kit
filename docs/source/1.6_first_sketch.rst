.. note::

    Hallo und herzlich willkommen in der SunFounder Raspberry Pi & Arduino & ESP32 Enthusiasten-Community auf Facebook! Tauche gemeinsam mit anderen Enthusiasten tiefer in die Welt von Raspberry Pi, Arduino und ESP32 ein.

    **Warum beitreten?**

    - **Expertenunterst√ºtzung**: L√∂se nach dem Kauf auftretende Probleme und technische Herausforderungen mit Hilfe unserer Community und unseres Teams.
    - **Lernen & Teilen**: Tausche Tipps und Anleitungen aus, um deine F√§higkeiten zu erweitern.
    - **Exklusive Vorschauen**: Erhalte fr√ºhzeitigen Zugang zu neuen Produktank√ºndigungen und exklusiven Einblicken.
    - **Spezielle Rabatte**: Profitiere von exklusiven Rabatten auf unsere neuesten Produkte.
    - **Festliche Aktionen und Verlosungen**: Nimm an Verlosungen und Feiertagsaktionen teil.

    üëâ Bereit, gemeinsam mit uns zu entdecken und zu erschaffen? Klicke auf [|link_sf_facebook|] und tritt noch heute bei!

1.6 Dein erster Sketch
================================

Jetzt lernen wir, wie wir unseren tollen Sketch an die Arduino-Platine senden. Es ist wie eine Nachricht in einer Flasche zu verschicken, aber viel cooler, weil wir sie √ºber ein USB-Kabel schicken!

**1. Beginnen wir mit einem Beispielprojekt**

1. Zuerst holen wir uns ein Projekt, das bereits f√ºr uns vorbereitet ist. Klicke in der Arduino IDE auf **Datei** -> **Beispiele** -> **Basics** -> **Blink**. Es √∂ffnet sich ein Programm, das wie ein fertiger Kuchen ist ‚Äì bereit, von uns dekoriert zu werden!

    .. image:: img/1_ide_open_blink.png
        :align: center

**2. W√§hle deine Platine und den Port**

1. Verbinde dein Arduino Uno R3 mit deinem Computer √ºber ein USB-Kabel. Es ist wie das Einstecken einer geheimen T√ºr zu endlosen M√∂glichkeiten!

    .. image:: img/1_connect_uno_pc.jpg
        :width: 600
        :align: center

2. Jetzt teilen wir der IDE mit, dass wir ein **Arduino Uno** verwenden. Klicke auf **Werkzeuge** -> **Platine** -> **Arduino AVR Boards** -> **Arduino Uno**.

    .. image:: img/1_ide_select_board.png
        :align: center

3. Wir m√ºssen auch den richtigen Port ausw√§hlen, wie die richtige T√ºr, um unsere Nachricht zu versenden. Klicke auf **Werkzeuge** -> **Port**.

    .. note::

        * Auf Windows-Computern k√∂nnte dies das Wort "COM" gefolgt von einer Zahl sein (nicht COM1).
        * Auf Mac-Computern k√∂nnte der Port in etwa so aussehen: "/dev/tty.usbmodem".
        * Auf Linux-Computern hei√üt der Port "/dev/ttyACM", gefolgt von einer Nummer.

    .. image:: img/1_ide_select_port.png
        :align: center

4. Wenn du die Arduino IDE 2.0 verwendest, kannst du die passende Platine und den Port schnell in diesem Fenster ausw√§hlen.

    .. image:: img/1_ide_quick.png
        :align: center

**3. √úberpr√ºfe deinen Sketch**

1. Dr√ºcke den **√úberpr√ºfen**-Button, um sicherzustellen, dass dein Sketch fehlerfrei ist. Es ist wie das Korrekturlesen deiner Hausaufgaben, bevor du sie abgibst.

    .. image:: img/1_ide_verify.png
        :align: center

2. Wenn ein Tippfehler oder Fehler vorliegt, zeigt dir die IDE an, was und wo der Fehler ist, damit du ihn beheben kannst.

    .. image:: img/1_ide_verify_error.png
        :align: center

3. Keine Fehler? Du erh√§ltst eine Nachricht, die dir mitteilt, dass alles bereit ist!

    .. image:: img/1_ide_done_compiling.png
        :align: center

**4. Sende deinen Sketch an die Platine**

Dr√ºcke abschlie√üend den **Hochladen**-Button, um deinen Sketch auf die Reise zur Platine zu schicken. Wenn alles gut l√§uft, erh√§ltst du eine Erfolgsmeldung.

    .. image:: img/1_ide_done_upload.png
        :align: center

Sieh zu, wie die LED auf deiner Arduino-Platine zu blinken beginnt. Es ist, als w√ºrde sie dir "Hallo" sagen!


Tolle Arbeit! Du hast gerade dein erstes Arduino-Programm hochgeladen und bist jetzt offiziell ein Programmierer! Was kommt als N√§chstes? Es gibt noch so viel mehr mit Arduino zu entdecken, und dies ist erst der Anfang. Bereit f√ºr weitere Abenteuer?

